name: FluentResults.ProtoBuf
env:
  LIB_VERSION: 1.0.0
  DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
  DOTNET_NOLOGO: 'true'

on:
  push:
    paths:
      - 'src/**'
      - 'tests/**'
      - 'FluentResults.ProtoBuf.sln'
      - '**/publish-nuget.yml'
  pull_request:
    paths:
      - 'src/**'
      - 'tests/**'
      - 'FluentResults.ProtoBuf.sln'
      - '**/publish-nuget.yml'
  workflow_dispatch:

jobs:
  compile:
    name: Build
    timeout-minutes: 2
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Restore NuGet packages
        run: dotnet restore
        working-directory: ./

      - name: Build
        run: dotnet build -c Release --no-restore
        working-directory: ./

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Unit Tests
        run: dotnet test -c Release -f net7.0 --logger:"console;verbosity=normal" --filter Category!=Flaky
        working-directory: tests/FluentResults.ProtoBuf.UnitTests

  calc-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    needs:
      - compile
      - unit-tests
    outputs:
      version: ${{ steps.v.outputs.version }}
    steps:
      - id: v
        run: |
          if [ "${{ github.ref }}" = 'refs/heads/main' ]; then
            echo "version=${{ env.LIB_VERSION }}" >> $GITHUB_ENV
            echo "version=${{ env.LIB_VERSION }}" >&2
            echo "::set-output name=version::${{ env.LIB_VERSION }}"
          else
            echo "version=${{ env.LIB_VERSION }}-develop.${{ github.run_number }}" >> $GITHUB_ENV
            echo "version=${{ env.LIB_VERSION }}-develop.${{ github.run_number }}" >&2
            echo "::set-output name=version::${{ env.LIB_VERSION }}-develop.${{ github.run_number }}"
          fi

  publish:
    name: Build and Publish NuGets
    timeout-minutes: 5
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') && github.repository == 'vitorogen/FluentResults.ProtoBuf' && success()
    needs:
      - calc-version
    steps:
      - name: Version Output Check
        run: echo "Calculated version: ${{ needs.calc-version.outputs.version }}"

      - name: Check out code
        uses: actions/checkout@v3

      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Build and Publish FluentResults.ProtoBuf
        uses: drusellers/publish-nuget@main
        with:
          project-file-path: src/FluentResults.ProtoBuf/FluentResults.ProtoBuf.csproj
          version: ${{ needs.calc-version.outputs.version }}
          tag-commit: false
          nuget-key: ${{secrets.NUGET_API_KEY}}